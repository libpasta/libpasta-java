/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package io.github.libpasta;

public class HashUpdate {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected HashUpdate(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(HashUpdate obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        pastaJNI.delete_HashUpdate(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setTag(HashUpdate.Tag value) {
    pastaJNI.HashUpdate_tag_set(swigCPtr, this, value.swigValue());
  }

  public HashUpdate.Tag getTag() {
    return HashUpdate.Tag.swigToEnum(pastaJNI.HashUpdate_tag_get(swigCPtr, this));
  }

  public void setUpdated(String value) {
    pastaJNI.HashUpdate_updated_set(swigCPtr, this, value);
  }

  public String getUpdated() {
    return pastaJNI.HashUpdate_updated_get(swigCPtr, this);
  }

  public enum Tag {
    Updated,
    Ok,
    Failed;

    public final int swigValue() {
      return swigValue;
    }

    public static Tag swigToEnum(int swigValue) {
      Tag[] swigValues = Tag.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (Tag swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + Tag.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private Tag() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private Tag(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private Tag(Tag swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

}
